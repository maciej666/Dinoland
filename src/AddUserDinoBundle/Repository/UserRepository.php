<?php

namespace AddUserDinoBundle\Repository;

/**
 * UserRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class UserRepository extends \Doctrine\ORM\EntityRepository
{
    private function getQueryBuilder()
    {
        $em = $this->getEntityManager();
        $qb = $em->getRepository('AddUserDinoBundle:User')
            ->createQueryBuilder('u');

        return $qb;
    }

    /**
     * Funkcja sortująca gdzie searchVal - tekst wpisany w wyszukiwarke
     * sort - pole do sortowania, sortType - asc lub desc
     * @param $searchVal, $sort, $sortType
     */
    public function sortByField($searchVal, $sort, $sortType)
    {
        $qb = $this->getQueryBuilder()
            ->orderBy('u.'.$sort, $sortType)
            ->where('u.email LIKE :searchVal')
            ->setParameter('searchVal', '%'.$searchVal.'%')
        ;

        return $qb->getQuery()->getResult();
    }


    /**
     * Do poprawy!!! Zrób jak findAllQueryBuilder
     * Szuka pól pasujących do przekazanej frazy
     * uwzględniając filtr po którym ma wyszukiwać
     *
     */
    public function searchWords($val, $filter)
    {
        $qb = $this->getQueryBuilder()
            ->where(''.$filter[0].' LIKE :val')
            ->orwhere(''.$filter[1].' LIKE :val')
            ->orwhere(''.$filter[2].' LIKE :val')
            ->orwhere(''.$filter[3].' LIKE :val')
            ->setParameter('val', '%'.$val.'%')
        ;

        return $qb->getQuery()->getResult();
    }


    /**
     * Szuka usera po id
     * @param $id
     */
    public function findUserById($id)
    {
        $qb = $this->getQueryBuilder()
            ->where('u.id = :val')
            ->setParameter('val', $id)
        ;

        return $qb->getQuery()->getSingleResult();
    }

    /**
     * Zwraca surowce po id usera
     * @param $id
     * @return array
     */
    public function findMaterialsByUser($id)
    {
        $qb = $this->getQueryBuilder()
            ->select('u.materia')
            ->where('u.id = :val')
            ->setParameter('val', $id)
        ;

        return $qb->getQuery()->getResult();
    }


    public function findAllQueryBuilder($filter = '')
    {
        $qb =  $this->createQueryBuilder('user');

        if ($filter) {
            $qb->andWhere('user.email LIKE :filter')
                ->setParameter('filter', '%'.$filter.'%');
        }

        return $qb;
    }


}