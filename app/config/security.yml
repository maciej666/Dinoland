# To get started with security, check out the documentation:
# http://symfony.com/doc/current/book/security.html
security:

    # http://symfony.com/doc/current/book/security.html#where-do-users-come-from-user-providers
    encoders:
            FOS\UserBundle\Model\UserInterface: sha1

    role_hierarchy:
            ROLE_ADMIN:       ROLE_USER
            ROLE_SUPER_ADMIN: ROLE_ADMIN

    providers:
        fos_userbundle:
                    id: fos_user.user_provider.username_email
        in_memory:
            memory: ~
#        jwt: # optional
#            lexik_jwt:
#                class: AppBundle\Security\JWTUser

    firewalls:
        # disables authentication for assets and the profiler, adapt it according to your needs
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        # osobny firewall dla api (course.4 odc. 10)
        api:
            pattern:   ^/api/
            stateless: true # nie przechowuj usera w sesji
            anonymous: true # pozwala na anonimowy dostęp do niektórych podstron ^/api/
            guard:
                authenticators:
                    - jwt_token_authenticator

        main:
            pattern: ^/
            form_login:
                provider: fos_userbundle
                csrf_token_generator: security.csrf.token_manager

            logout:       true
            anonymous:    true
            remember_me:
                secret:   '%secret%'
                lifetime: 604800 # 1 week in seconds
                path:     /

#        login:
#            pattern:  ^/api/login
#            stateless: true
#            anonymous: true
#            form_login:
#                check_path:               /api/login_check
#                username_parameter:       email
#                success_handler:          lexik_jwt_authentication.handler.authentication_success
#                failure_handler:          lexik_jwt_authentication.handler.authentication_failure
#                require_previous_session: false
#




    access_control:
            - { path: ^/login$, role: IS_AUTHENTICATED_ANONYMOUSLY }
            - { path: ^/register, role: IS_AUTHENTICATED_ANONYMOUSLY }
            - { path: ^/dino_account, role: ROLE_USER }
            - { path: ^/blog_post, role: ROLE_USER }
            - { path: ^/resetting, role: IS_AUTHENTICATED_ANONYMOUSLY }
            - { path: ^/admin/, role: ROLE_ADMIN }
#            - { path: ^/api/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
#            - { path: ^/api,       roles: IS_AUTHENTICATED_FULLY }
#            - { path: ^/api/dino, role: IS_AUTHENTICATED_ANONYMOUSLY }